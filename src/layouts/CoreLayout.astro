---
import path from 'node:path';
import MainHead from '../components/MainHead.astro';
import { sortGroupContent } from '../utils/sortGroupContent.js'
import './core-layout.css';

const markdownFiles = Astro.fetchContent('../pages/*/*.md');
const { groupedObj, groupedObjWithoutNext } = sortGroupContent(markdownFiles);

const pathName = Astro.request.url.pathname.replace(/^\//g, '');
const firstFilePathName = Astro.props.firstFileUrl?.replace(/^\//g, '');
const currentFile = pathName ? pathName : firstFilePathName;
const currentCollection = path.dirname(currentFile);
const groupedEntries = Object.entries(groupedObjWithoutNext);
const groupedEntriesWithoutCurrent = groupedEntries.filter(([key]) =>
  currentCollection !== key
);
const currentGroupIndex = groupedEntries.findIndex(([key]) =>
  currentCollection === key
);

const date = groupedEntries[currentGroupIndex] ? new Date(groupedEntries[currentGroupIndex][0]) : new Date();
const subtitle = `in ${Intl.DateTimeFormat('en-GB', { month: 'long' }).format(date)} ${date.getFullYear()}`;
---
<html lang="en">
  <head>
    <MainHead />
    <script hoist type="module">
      import '@divriots/rev/button/index.js';
      import mixpanel from 'mixpanel-browser';
      mixpanel.init('d5dd6fb9188234a5a5c68a1c2457cbd6', {
        ignore_dnt: true,
        disable_persistence: true
      });
      Array.from(document.querySelectorAll('a')).forEach(anchor => {
        anchor.addEventListener('click', () => {
          mixpanel.track('browse-through');
        })
      })
    </script>
    <script>
      window.addEventListener("message", (ev) => {
        if (ev.data === 'get-release-date') {
          dispatchReleaseDate(ev);
        }
      });

      function dispatchReleaseDate(ev) {
        const { source } = ev;
        const releaseDate = document.getElementById('current-release-date').innerText;
        source.postMessage(
          {
            type: "release-date",
            releaseDate,
          },
          "*"
        );
      }
    </script>
  </head>
  <body>
    <aside class="aside">
      <div class="aside__content">
        <h1>What's new</h1>
        <h2 class="subtitle">{subtitle}</h2>
        <nav>
          <ul>
            {groupedObj[currentCollection]?.map(file =>
              <li>
                <a active={`/${currentFile}` === `${file.url}`} href={file.url}>{file.title}</a>
              </li>
            )}
          </ul>
        </nav>
      </div>
      {currentGroupIndex > -1 ?
        <div class="paginate">
          <!-- if you edit this id, make sure to also adjust the postMessage script in the <head> -->
          <p id="current-release-date" class="paginate__current">{groupedEntries[currentGroupIndex][0]}</p>
          <div class="paginate__anchors">
            {groupedEntries.length - 1 > currentGroupIndex ? <a
              href={
                groupedEntries[currentGroupIndex + 1][1][0].url
              }
            ><rev-button tab-index="-1" variation="secondary">Previous</rev-button></a> : <span></span>}
            {currentGroupIndex > 0 ? <a
              href={
                groupedEntries[currentGroupIndex - 1][1][0].url
              }
            ><rev-button tab-index="-1" variation="secondary">Next</rev-button></a> : <span></span>}
          </div>
        </div>
        : ''}
    </aside>
    <main class="main">
      <slot />
    </main>
  </body>
</html>